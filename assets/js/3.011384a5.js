(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{358:function(t,a,s){t.exports=s.p+"assets/img/image-20201122221416446.b8d30b8a.png"},359:function(t,a,s){t.exports=s.p+"assets/img/image-20201122221856592.c4d8cb99.png"},360:function(t,a,s){t.exports=s.p+"assets/img/image-20201122222405234.0cb3df03.png"},361:function(t,a,s){t.exports=s.p+"assets/img/image-20201122222716819.c8c6abba.png"},362:function(t,a,s){t.exports=s.p+"assets/img/image-20201122223813992.77a73b8e.png"},363:function(t,a,s){t.exports=s.p+"assets/img/image-20201125181636708.566ccffd.png"},364:function(t,a,s){t.exports=s.p+"assets/img/image-20201125182815067.a546868d.png"},365:function(t,a,s){t.exports=s.p+"assets/img/image-20201125183009435.eb43a613.png"},412:function(t,a,s){"use strict";s.r(a);var _=s(42),v=Object(_.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"算法的基础知识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法的基础知识"}},[t._v("#")]),t._v(" 算法的基础知识")]),t._v(" "),_("ul",[_("li",[t._v("输入、输出和数量级")]),t._v(" "),_("li",[t._v("计算能力的改革")]),t._v(" "),_("li",[t._v("CPU、寄存器和内存")]),t._v(" "),_("li",[t._v("二分查找")]),t._v(" "),_("li",[t._v("插入排序")]),t._v(" "),_("li",[t._v("冒泡排序")])]),t._v(" "),_("h2",{attrs:{id:"输入、输出和数量级"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#输入、输出和数量级"}},[t._v("#")]),t._v(" 输入、输出和数量级")]),t._v(" "),_("h3",{attrs:{id:"数量级"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数量级"}},[t._v("#")]),t._v(" 数量级")]),t._v(" "),_("p",[t._v("$$\n1.5*10^3 = 1500\n$$")]),t._v(" "),_("p",[t._v("数量级为3，千级，k(ilo-)")]),t._v(" "),_("p",[t._v("$$\n2.6*10^6 = 1600000\n$$")]),t._v(" "),_("p",[t._v("数量级为6，百万级，m(illion)")]),t._v(" "),_("p",[t._v("$$\n1.3*10^9 = 1300000000\n$$")]),t._v(" "),_("p",[t._v("数量级为9，十亿级，g(iga-)")]),t._v(" "),_("p",[_("strong",[t._v("描述")])]),t._v(" "),_("p",[t._v("淘宝2017年双11订单量8.12亿 => 淘宝双11的订单数为"),_("strong",[t._v("亿")]),t._v("级")]),t._v(" "),_("p",[t._v("知乎用户数突破1.6亿=>知乎的用户数为"),_("strong",[t._v("亿")]),t._v("级")]),t._v(" "),_("p",[t._v("头条员工数突破1万=>头条的员工数为"),_("strong",[t._v("万")]),t._v("级")]),t._v(" "),_("p",[_("strong",[t._v("比较关系")])]),t._v(" "),_("p",[t._v("阿里市值4687亿美金，百度820亿美金 => 阿里市值领先百度1个数量级")]),t._v(" "),_("p",[t._v("北京人口总数2100万，长沙人口总数791万=>北京人口总数比长沙大1个数量级")]),t._v(" "),_("p",[_("strong",[t._v("更多描述")])]),t._v(" "),_("p",[t._v("宇宙中有20万亿亿-40万亿亿课恒星 => 宇宙中恒星数量级为22")]),t._v(" "),_("p",[t._v("Apple市值10047亿美金 => 苹果市值到达T级")]),t._v(" "),_("p",[t._v("显示器的刷新频率通常为60HZ => 显示器的刷新间隔为10ms级， 1000/60=16.66666...")]),t._v(" "),_("p",[_("strong",[t._v("总结")])]),t._v(" "),_("ul",[_("li",[t._v("具体的数字用来记录客观世界")]),t._v(" "),_("li",[t._v("模糊的数字用来理解客观世界")])]),t._v(" "),_("h3",{attrs:{id:"输入和输出"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#输入和输出"}},[t._v("#")]),t._v(" 输入和输出")]),t._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")])]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("x"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),_("blockquote",[_("p",[t._v("输入：数组\n输出：数字\n输入规模：A.length")])]),t._v(" "),_("p",[t._v("算法是输入到输出的映射")]),t._v(" "),_("p",[_("strong",[t._v("输入规模")])]),t._v(" "),_("p",[t._v("统计淘宝2017年双11交易额 => 加和8.12亿订单 => 统计算法支持"),_("strong",[t._v("十亿")]),t._v("级输入")]),t._v(" "),_("p",[_("strong",[t._v("算法设计的客观条件")])]),t._v(" "),_("ul",[_("li",[t._v("淘宝统计订单的算法应该支持"),_("strong",[t._v("十亿")]),t._v("级数据，在"),_("strong",[t._v("毫秒")]),t._v("级时间内完成计算")]),t._v(" "),_("li",[t._v("知乎统计用户肖像的算法应该支持"),_("strong",[t._v("亿")]),t._v("级数据，在"),_("strong",[t._v("小时")]),t._v("时间内完成一次统计")]),t._v(" "),_("li",[t._v("React的VirtualDOM应该支持"),_("strong",[t._v("万")]),t._v("级数据，在"),_("strong",[t._v("毫秒")]),t._v("级时间内完成一次计算")])]),t._v(" "),_("h2",{attrs:{id:"计算能力的改革"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#计算能力的改革"}},[t._v("#")]),t._v(" 计算能力的改革")]),t._v(" "),_("p",[t._v("1946年，世界上第一台计算机ENIAC每秒执行5000次加法或者400次乘法。")]),t._v(" "),_("p",[t._v("1978年，8086芯片主频4.77-10MHz，拥有了浮点计算、三角函数等数学指令。每秒可以处理百万级指令。")]),t._v(" "),_("p",[t._v("2018年，骁龙845芯片拥有8核心，2.8GHz的主频；同时集成了GPU。")]),t._v(" "),_("blockquote",[_("p",[t._v("从ENIAC到骁龙CPU，人类的计算能力增长了至少"),_("strong",[t._v("10万级")]),t._v("倍数")])]),t._v(" "),_("p",[t._v("一个hadoop分布式集群动辄有数千台机器，"),_("strong",[t._v("万")]),t._v("级CPU核心，利用分布式算法计算能力达到智能手机的"),_("strong",[t._v("万")]),t._v("级倍数。")]),t._v(" "),_("p",[t._v("量子计算机，50量子比特的量子计算机每秒可以处理1125亿亿次计算。是大数据集群的"),_("strong",[t._v("亿")]),t._v("级倍数。")]),t._v(" "),_("h2",{attrs:{id:"cpu、寄存器和内存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cpu、寄存器和内存"}},[t._v("#")]),t._v(" CPU、寄存器和内存")]),t._v(" "),_("p",[t._v("算法依赖的计算机模型？")]),t._v(" "),_("p",[t._v("ENIAC => 8086 => 大数据集群 => 量子计算机")]),t._v(" "),_("h3",{attrs:{id:"cpu-内存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cpu-内存"}},[t._v("#")]),t._v(" CPU+内存")]),t._v(" "),_("p",[t._v("短期记忆（很少事情）=> "),_("strong",[t._v("寄存器（Reqister）")])]),t._v(" "),_("p",[t._v("推理计算 => "),_("strong",[t._v("算数逻辑单元（ALU）")])]),t._v(" "),_("p",[t._v("长期记忆（很多事情）=> "),_("strong",[t._v("随机存储器（RAM）")])]),t._v(" "),_("p",[t._v("其他：缓存等")]),t._v(" "),_("h3",{attrs:{id:"寄存器-短期记忆"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#寄存器-短期记忆"}},[t._v("#")]),t._v(" 寄存器（短期记忆）")]),t._v(" "),_("p",[_("img",{attrs:{src:s(358),alt:"image-20201122222405234"}})]),t._v(" "),_("h3",{attrs:{id:"alu-算数逻辑单元"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#alu-算数逻辑单元"}},[t._v("#")]),t._v(" ALU（算数逻辑单元）")]),t._v(" "),_("p",[t._v("从一个寄存器取，计算完放入另一个寄存器。")]),t._v(" "),_("p",[_("img",{attrs:{src:s(359),alt:"image-20201122222405234"}})]),t._v(" "),_("h3",{attrs:{id:"随机存储器-长期记忆"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#随机存储器-长期记忆"}},[t._v("#")]),t._v(" 随机存储器（长期记忆）")]),t._v(" "),_("p",[t._v("内存，访问每一个地址的时间相同")]),t._v(" "),_("p",[_("img",{attrs:{src:s(360),alt:"image-20201122222405234"}})]),t._v(" "),_("p",[t._v("数据空间地址与指令空间地址")]),t._v(" "),_("p",[_("img",{attrs:{src:s(361),alt:"image-20201122222716819"}})]),t._v(" "),_("h3",{attrs:{id:"指令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),_("p",[_("img",{attrs:{src:s(362),alt:"image-20201122223813992"}})]),t._v(" "),_("h3",{attrs:{id:"cpu指令集"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cpu指令集"}},[t._v("#")]),t._v(" CPU指令集")]),t._v(" "),_("p",[_("img",{attrs:{src:s(363),alt:"image-20201125181636708"}})]),t._v(" "),_("p",[t._v("用于计算的指令，特征是只涉及alu-寄存器之间的关系，像sin这种正弦计算一般是由硬件电路实现的，不消耗时间。MUL把两个寄存器中的数据放到另一个寄存器中。单个寄存器的数据加减。")]),t._v(" "),_("p",[t._v("ram-寄存器是操作内存的。LOAD 把内存的数据加载到寄存器中，STORE是再存回去，MOV把内存地址中的数据移到另一个内存地址。")]),t._v(" "),_("p",[t._v("控制程序流程，操作pc指针，相当于if else while等")]),t._v(" "),_("p",[t._v("这些指令构成了我们平常写的程序。我们写的程序最终会转化成指令(机器码)进行执行。")]),t._v(" "),_("h3",{attrs:{id:"启动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),_("p",[t._v("开机的过程：数据从 硬盘=>内存=>cpu缓存=>cpu核心 进行alu计算")]),t._v(" "),_("p",[_("img",{attrs:{src:s(364),alt:"image-20201125182815067"}})]),t._v(" "),_("h3",{attrs:{id:"_5000-0-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5000-0-2"}},[t._v("#")]),t._v(" 5000 * 0.2 = ?")]),t._v(" "),_("p",[t._v("5000*0.2的执行过程")]),t._v(" "),_("p",[_("img",{attrs:{src:s(365),alt:"image-20201125183009435"}})]),t._v(" "),_("h2",{attrs:{id:"二分查找"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二分查找"}},[t._v("#")]),t._v(" 二分查找")]),t._v(" "),_("p",[t._v("在字母顺序排列的试卷中，曹操/杜甫/黄飞鸿/刘备/李四/邱明/许褚/姚明/嬴政/张三，如何找到嬴政？")]),t._v(" "),_("p",[t._v("先找李四   =>   l<y    =>    邱明/许褚/姚明/嬴政/张三    =>   姚明    =>    y =y    =>    姚明/嬴政    =>    嬴政")]),t._v(" "),_("p",[t._v("最坏情况规模为1000需要查找几次？")]),t._v(" "),_("p",[t._v("1000 500 250 125 62  31 15 7 3 1 => 10次 => 1000除几次2到1？=>\n$$\n2^9 = 512\n$$")]),t._v(" "),_("p",[t._v("$$\n2 ^ 10 =1024\n$$")])])}),[],!1,null,null,null);a.default=v.exports}}]);