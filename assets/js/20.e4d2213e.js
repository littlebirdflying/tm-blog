(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{371:function(s,t,a){"use strict";a.r(t);var e=a(42),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"axios二次封装及api接口管理规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#axios二次封装及api接口管理规范"}},[s._v("#")]),s._v(" axios二次封装及api接口管理规范")]),s._v(" "),a("h2",{attrs:{id:"数据请求的进化史-ajax-axios-fetch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据请求的进化史-ajax-axios-fetch"}},[s._v("#")]),s._v(" 数据请求的进化史：ajax -> axios -> fetch")]),s._v(" "),a("p",[s._v("http://www.axios-js.com/zh-cn/docs/")]),s._v(" "),a("p",[s._v("http://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Fetch_API/Using_Fetch")]),s._v(" "),a("p",[s._v("发展过程：ajax -> jquery封装的ajax -> axios（结合promise） -> fetch")]),s._v(" "),a("p",[s._v("axios是基于ajax和promise进行封装的库。所以jquery的ajax和axios都是基于ajax的进一步封装。")]),s._v(" "),a("p",[s._v("fetch是浏览器内置的api，"),a("strong",[s._v("fetch和ajax不同，它们是两套完全不同的机制")]),s._v("。fetch的好处：它是内置的类，进行数据请求，天生就是基于Promise进行管理的。需要兼容的话，可以安装babel-Polyfill依赖。")]),s._v(" "),a("h2",{attrs:{id:"基于axios实现接口请求库的封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于axios实现接口请求库的封装"}},[s._v("#")]),s._v(" 基于axios实现接口请求库的封装")]),s._v(" "),a("blockquote",[a("p",[s._v("高级处理技巧：接口环境切换、断网处理等")])]),s._v(" "),a("p",[s._v("安装依赖 "),a("code",[s._v("yarn add axios qs")]),s._v("，qs能够把对象转换成urlencoded的格式，也能把urlencoded格式的字符串变成对象。")]),s._v(" "),a("p",[s._v("自己配置启动命令，修改选择不同运行环境，package.json")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"serve"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue-cli-service serve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"serve:test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"set NODE_ENV=test&&vue-cli-service serve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"serve:production"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"set NODE_ENV=production&&vue-cli-service serve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue-cli-service build"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"基于fetch实现接口请求库的封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于fetch实现接口请求库的封装"}},[s._v("#")]),s._v(" 基于fetch实现接口请求库的封装")])])}),[],!1,null,null,null);t.default=r.exports}}]);